ds <- within(dsraw, {
spret <-  (sp500index+sp500d12)/iaw$lagseries(sp500index)-1
logeqp <-  log(1.0 + spret - tbill/100.0)
lagdp <- iaw$lagseries(sp500d12)/iaw$lagseries(sp500index)
})
################################################################
## oct 2017
##
## omitting standard error bounds, this is a template to generate
## figures like those in Goyal-Welch, RFS, july 2008.
################################################################
cat("Trying to make it possible for others to run the same code.\n",
"otherwise, you may have to modify the code.  it should be easy.\n")
if (!exists("lagseries", iaw)) iaw$lagseries <- function(x) c(NA, x[1:(length(x)-1)])
if (!exists("residuals", iaw)) iaw$residuals <- stats:::residuals(lmobject,...)
if (!exists("hline", iaw)) iaw$hline <- function(yloc, xloc=c(-9e99,9e99), ...) { for (i in 1:length(yloc)) { lines(xloc, c(yloc[i], yloc[i]), ...) } }
if (!exists("pdf.start", iaw)) iaw$pdf.start <- pdf
if (!exists("p.arrows", iaw)) iaw$p.arrows <- arrows
################################################################
dsraw <- read.csv("goyal-welch-a.csv")  ## download the latest version
## to perfectly replicate GW, use ds <- subset(dsraw, dsraw$yyyy<=2005)
ds <- within(dsraw, {
spret <-  (sp500index+sp500d12)/iaw$lagseries(sp500index)-1
logeqp <-  log(1.0 + spret - tbill/100.0)
lagdp <- iaw$lagseries(sp500d12)/iaw$lagseries(sp500index)
})
ds <- subset(ds, ds$yyyy>=1872, select=c("yyyy", "logeqp", "lagdp"))
print(summary(ds))
## in-sample residuals are easy
is.xyresid <- iaw$residuals( lm( logeqp ~ lagdp, data=ds ) )
is.meanresid <- ds$logeqp - mean( ds$logeqp )
isreg <- summary( lm( logeqp ~ lagdp, data=ds ) )
print(isreg)
tstat <- round(coef(isreg)[2,3],2)
rsq <- round(isreg$adj.r.squared, 3)*100
lyr <- last(ds$yyyy,1)
## out-of-sample residuals need 20 years of data
firstyear <- 20
oos.xyresid <- oos.meanresid <- rep(NA, nrow(ds))
for (i in firstyear:nrow(ds)) {
oos.meanpred <- mean( ds$logeqp[1:i] )
oos.meanresid[i+1] <- ds$logeqp[i+1]-oos.meanpred
oos.lmcoef <- coef(lm( logeqp ~ lagdp, data=ds[1:i,]))
oos.pred <- oos.lmcoef[1]+oos.lmcoef[2]*ds$lagdp[i+1]
oos.xyresid[i+1] <- ds$logeqp[i+1]-oos.pred
}
################################################################
## now create a plotwork-related data set
################################################################
plotwork <- data.frame(yyyy=ds$yyyy, is.meanresid=is.meanresid, is.xyresid=is.xyresid,
oos.meanresid=oos.meanresid[1:nrow(ds)], oos.xyresid=oos.xyresid[1:nrow(ds)] )
rm(ds)  ## done
plotwork[firstyear,] <- c( plotwork$yyyy[firstyear-1]+1, 0, 0, 0, 0 )
plotwork <- plotwork[complete.cases(plotwork),]
rownames(plotwork) <- NULL
plotwork <- within(plotwork, {
is.improvement <- cumsum( plotwork$is.meanresid**2 ) - cumsum( is.xyresid**2 )
oos.improvement <- cumsum( oos.meanresid**2 ) - cumsum( oos.xyresid**2 )
})
################################################################
## the real plotting begins
################################################################
iaw$pdf.start("gwdp.pdf")
annotateloc <- 35
with(plotwork, {
plot( yyyy, is.improvement, ylim=c(-0.2,0.2), type="n", xlab="Year", ylab="Cumulative SSE Difference" )
rect(1973, -1, 1975, 1, col="red"); text( 1977, -0.15, "Oil Shock", cex=0.75, srt=90, col="red")
lines( yyyy, oos.improvement, lwd=8, col="white" )
lines( yyyy, oos.improvement, lwd=3, col="blue" )
lines( yyyy, is.improvement, lwd=5, col="white" )
lines( yyyy, is.improvement, lty=1 )
text( yyyy[annotateloc], oos.improvement[annotateloc]-0.01, pos=1, "OOS", col="blue" )
text( yyyy[annotateloc], is.improvement[annotateloc]+0.01, pos=3, "IS", col="black" )
lines( c(yyyy[72], 2100), rep(oos.improvement[72],2), lty=2 )
})
iaw$hline(0, lty=2)
iaw$p.arrows( 1890, -0.12, 1895, -0.08 ); text( 1909, -0.09, "Conditional Model\nPredicts better", cex=0.75 )
iaw$p.arrows( 1890, -0.13, 1895, -0.17 ); text( 1909, -0.16, "Prevailing Mean \nPredicts better", cex=0.75 )
text( 1890, 0.16, paste0("Dependent: Log Equity Premium\nIndependent: Lagged D/P\nData: 1872 (1892) to ", lyr), cex=0.85, pos=4)
text( 1985, 0.13, paste0("\nIS T-stat: ", tstat, "\nIS Adj R^2: ", rsq, "%"),  cex=0.85, pos=4 )
iaw$pdf.end()
dsraw <- read.csv("goyal-welch-a.csv")  ## download the latest version
################################################################
## oct 2017
##
## omitting standard error bounds, this is a template to generate
## figures like those in Goyal-Welch, RFS, july 2008.
################################################################
cat("Trying to make it possible for others to run the same code.\n",
"otherwise, you may have to modify the code.  it should be easy.\n")
if (!exists("lagseries", iaw)) iaw$lagseries <- function(x) c(NA, x[1:(length(x)-1)])
if (!exists("residuals", iaw)) iaw$residuals <- stats:::residuals(lmobject,...)
if (!exists("hline", iaw)) iaw$hline <- function(yloc, xloc=c(-9e99,9e99), ...) { for (i in 1:length(yloc)) { lines(xloc, c(yloc[i], yloc[i]), ...) } }
if (!exists("pdf.start", iaw)) iaw$pdf.start <- pdf
if (!exists("p.arrows", iaw)) iaw$p.arrows <- arrows
################################################################
dsraw <- read.csv("goyal-welch-a.csv")  ## download the latest version
## to perfectly replicate GW, use ds <- subset(dsraw, dsraw$yyyy<=2005)
ds <- within(dsraw, {
spret <-  (sp500index+sp500d12)/iaw$lagseries(sp500index)-1
logeqp <-  log(1.0 + spret - tbill/100.0)
lagdp <- iaw$lagseries(sp500d12)/iaw$lagseries(sp500index)
})
ds <- subset(ds, ds$yyyy>=1872, select=c("yyyy", "logeqp", "lagdp"))
print(summary(ds))
## in-sample residuals are easy
is.xyresid <- iaw$residuals( lm( logeqp ~ lagdp, data=ds ) )
is.meanresid <- ds$logeqp - mean( ds$logeqp )
isreg <- summary( lm( logeqp ~ lagdp, data=ds ) )
print(isreg)
tstat <- round(coef(isreg)[2,3],2)
rsq <- round(isreg$adj.r.squared, 3)*100
lyr <- last(ds$yyyy,1)
## out-of-sample residuals need 20 years of data
firstyear <- 20
oos.xyresid <- oos.meanresid <- rep(NA, nrow(ds))
for (i in firstyear:nrow(ds)) {
oos.meanpred <- mean( ds$logeqp[1:i] )
oos.meanresid[i+1] <- ds$logeqp[i+1]-oos.meanpred
oos.lmcoef <- coef(lm( logeqp ~ lagdp, data=ds[1:i,]))
oos.pred <- oos.lmcoef[1]+oos.lmcoef[2]*ds$lagdp[i+1]
oos.xyresid[i+1] <- ds$logeqp[i+1]-oos.pred
}
################################################################
## now create a plotwork-related data set
################################################################
plotwork <- data.frame(yyyy=ds$yyyy, is.meanresid=is.meanresid, is.xyresid=is.xyresid,
oos.meanresid=oos.meanresid[1:nrow(ds)], oos.xyresid=oos.xyresid[1:nrow(ds)] )
rm(ds)  ## done
plotwork[firstyear,] <- c( plotwork$yyyy[firstyear-1]+1, 0, 0, 0, 0 )
plotwork <- plotwork[complete.cases(plotwork),]
rownames(plotwork) <- NULL
plotwork <- within(plotwork, {
is.improvement <- cumsum( plotwork$is.meanresid**2 ) - cumsum( is.xyresid**2 )
oos.improvement <- cumsum( oos.meanresid**2 ) - cumsum( oos.xyresid**2 )
})
################################################################
## the real plotting begins
################################################################
iaw$pdf.start("gwdp.pdf")
annotateloc <- 35
with(plotwork, {
plot( yyyy, is.improvement, ylim=c(-0.2,0.2), type="n", xlab="Year", ylab="Cumulative SSE Difference" )
rect(1973, -1, 1975, 1, col="red"); text( 1977, -0.15, "Oil Shock", cex=0.75, srt=90, col="red")
lines( yyyy, oos.improvement, lwd=8, col="white" )
lines( yyyy, oos.improvement, lwd=3, col="blue" )
lines( yyyy, is.improvement, lwd=5, col="white" )
lines( yyyy, is.improvement, lty=1 )
text( yyyy[annotateloc], oos.improvement[annotateloc]-0.01, pos=1, "OOS", col="blue" )
text( yyyy[annotateloc], is.improvement[annotateloc]+0.01, pos=3, "IS", col="black" )
lines( c(yyyy[72], 2100), rep(oos.improvement[72],2), lty=2 )
})
iaw$hline(0, lty=2)
iaw$p.arrows( 1890, -0.12, 1895, -0.08 ); text( 1909, -0.09, "Conditional Model\nPredicts better", cex=0.75 )
iaw$p.arrows( 1890, -0.13, 1895, -0.17 ); text( 1909, -0.16, "Prevailing Mean \nPredicts better", cex=0.75 )
text( 1890, 0.16, paste0("Dependent: Log Equity Premium\nIndependent: Lagged D/P\nData: 1872 (1892) to ", lyr), cex=0.85, pos=4)
text( 1985, 0.13, paste0("\nIS T-stat: ", tstat, "\nIS Adj R^2: ", rsq, "%"),  cex=0.85, pos=4 )
iaw$pdf.end()
###############################################################
dsraw <- read.csv("goyal-welch-a.csv")  ## download the latest version
###############################################################
dsraw <- read.csv("goyal-welch-a.csv")  ## download the latest version
cd C:\Users\Administrator\Desktop\goyal_welch
cd "C:\Users\Administrator\Desktop\goyal_welch"
cd "C:/Users/Administrator/Desktop/goyal_welch"
###############################################################
dsraw <- read.csv("goyal-welch-a.csv")  ## download the latest version
setwd("C:/Users/Administrator/Desktop/goyal_welch")
###############################################################
dsraw <- read.csv("goyal-welch-a.csv")  ## download the latest version
################################################################
## oct 2017
##
## omitting standard error bounds, this is a template to generate
## figures like those in Goyal-Welch, RFS, july 2008.
################################################################
cat("Trying to make it possible for others to run the same code.\n",
"otherwise, you may have to modify the code.  it should be easy.\n")
if (!exists("lagseries", iaw)) iaw$lagseries <- function(x) c(NA, x[1:(length(x)-1)])
if (!exists("residuals", iaw)) iaw$residuals <- stats:::residuals(lmobject,...)
if (!exists("hline", iaw)) iaw$hline <- function(yloc, xloc=c(-9e99,9e99), ...) { for (i in 1:length(yloc)) { lines(xloc, c(yloc[i], yloc[i]), ...) } }
if (!exists("pdf.start", iaw)) iaw$pdf.start <- pdf
if (!exists("p.arrows", iaw)) iaw$p.arrows <- arrows
################################################################
dsraw <- read.csv("goyal-welch-a.csv")  ## download the latest version
## to perfectly replicate GW, use ds <- subset(dsraw, dsraw$yyyy<=2005)
ds <- within(dsraw, {
spret <-  (sp500index+sp500d12)/iaw$lagseries(sp500index)-1
logeqp <-  log(1.0 + spret - tbill/100.0)
lagdp <- iaw$lagseries(sp500d12)/iaw$lagseries(sp500index)
})
ds <- subset(ds, ds$yyyy>=1872, select=c("yyyy", "logeqp", "lagdp"))
print(summary(ds))
## in-sample residuals are easy
is.xyresid <- iaw$residuals( lm( logeqp ~ lagdp, data=ds ) )
is.meanresid <- ds$logeqp - mean( ds$logeqp )
isreg <- summary( lm( logeqp ~ lagdp, data=ds ) )
print(isreg)
tstat <- round(coef(isreg)[2,3],2)
rsq <- round(isreg$adj.r.squared, 3)*100
lyr <- last(ds$yyyy,1)
## out-of-sample residuals need 20 years of data
firstyear <- 20
oos.xyresid <- oos.meanresid <- rep(NA, nrow(ds))
for (i in firstyear:nrow(ds)) {
oos.meanpred <- mean( ds$logeqp[1:i] )
oos.meanresid[i+1] <- ds$logeqp[i+1]-oos.meanpred
oos.lmcoef <- coef(lm( logeqp ~ lagdp, data=ds[1:i,]))
oos.pred <- oos.lmcoef[1]+oos.lmcoef[2]*ds$lagdp[i+1]
oos.xyresid[i+1] <- ds$logeqp[i+1]-oos.pred
}
################################################################
## now create a plotwork-related data set
################################################################
plotwork <- data.frame(yyyy=ds$yyyy, is.meanresid=is.meanresid, is.xyresid=is.xyresid,
oos.meanresid=oos.meanresid[1:nrow(ds)], oos.xyresid=oos.xyresid[1:nrow(ds)] )
rm(ds)  ## done
plotwork[firstyear,] <- c( plotwork$yyyy[firstyear-1]+1, 0, 0, 0, 0 )
plotwork <- plotwork[complete.cases(plotwork),]
rownames(plotwork) <- NULL
plotwork <- within(plotwork, {
is.improvement <- cumsum( plotwork$is.meanresid**2 ) - cumsum( is.xyresid**2 )
oos.improvement <- cumsum( oos.meanresid**2 ) - cumsum( oos.xyresid**2 )
})
################################################################
## the real plotting begins
################################################################
iaw$pdf.start("gwdp.pdf")
annotateloc <- 35
with(plotwork, {
plot( yyyy, is.improvement, ylim=c(-0.2,0.2), type="n", xlab="Year", ylab="Cumulative SSE Difference" )
rect(1973, -1, 1975, 1, col="red"); text( 1977, -0.15, "Oil Shock", cex=0.75, srt=90, col="red")
lines( yyyy, oos.improvement, lwd=8, col="white" )
lines( yyyy, oos.improvement, lwd=3, col="blue" )
lines( yyyy, is.improvement, lwd=5, col="white" )
lines( yyyy, is.improvement, lty=1 )
text( yyyy[annotateloc], oos.improvement[annotateloc]-0.01, pos=1, "OOS", col="blue" )
text( yyyy[annotateloc], is.improvement[annotateloc]+0.01, pos=3, "IS", col="black" )
lines( c(yyyy[72], 2100), rep(oos.improvement[72],2), lty=2 )
})
iaw$hline(0, lty=2)
iaw$p.arrows( 1890, -0.12, 1895, -0.08 ); text( 1909, -0.09, "Conditional Model\nPredicts better", cex=0.75 )
iaw$p.arrows( 1890, -0.13, 1895, -0.17 ); text( 1909, -0.16, "Prevailing Mean \nPredicts better", cex=0.75 )
text( 1890, 0.16, paste0("Dependent: Log Equity Premium\nIndependent: Lagged D/P\nData: 1872 (1892) to ", lyr), cex=0.85, pos=4)
text( 1985, 0.13, paste0("\nIS T-stat: ", tstat, "\nIS Adj R^2: ", rsq, "%"),  cex=0.85, pos=4 )
iaw$pdf.end()
cat("Trying to make it possible for others to run the same code.\n",
"otherwise, you may have to modify the code.  it should be easy.\n")
if (!exists("lagseries", iaw)) iaw$lagseries <- function(x) c(NA, x[1:(length(x)-1)])
################################################################
dsraw <- read.csv("goyal-welch-a.csv")  ## download the latest version
## to perfectly replicate GW, use ds <- subset(dsraw, dsraw$yyyy<=2005)
ds <- within(dsraw, {
spret <-  (sp500index+sp500d12)/iaw$lagseries(sp500index)-1
logeqp <-  log(1.0 + spret - tbill/100.0)
lagdp <- iaw$lagseries(sp500d12)/iaw$lagseries(sp500index)
})
ds <- subset(ds, ds$yyyy>=1872, select=c("yyyy", "logeqp", "lagdp"))
print(summary(ds))
## in-sample residuals are easy
is.xyresid <- iaw$residuals( lm( logeqp ~ lagdp, data=ds ) )
is.meanresid <- ds$logeqp - mean( ds$logeqp )
isreg <- summary( lm( logeqp ~ lagdp, data=ds ) )
print(isreg)
tstat <- round(coef(isreg)[2,3],2)
rsq <- round(isreg$adj.r.squared, 3)*100
lyr <- last(ds$yyyy,1)
## out-of-sample residuals need 20 years of data
firstyear <- 20
oos.xyresid <- oos.meanresid <- rep(NA, nrow(ds))
for (i in firstyear:nrow(ds)) {
oos.meanpred <- mean( ds$logeqp[1:i] )
oos.meanresid[i+1] <- ds$logeqp[i+1]-oos.meanpred
oos.lmcoef <- coef(lm( logeqp ~ lagdp, data=ds[1:i,]))
oos.pred <- oos.lmcoef[1]+oos.lmcoef[2]*ds$lagdp[i+1]
oos.xyresid[i+1] <- ds$logeqp[i+1]-oos.pred
}
ds <- within(dsraw, {
spret <-  (sp500index+sp500d12)/iaw$lagseries(sp500index)-1
logeqp <-  log(1.0 + spret - tbill/100.0)
lagdp <- iaw$lagseries(sp500d12)/iaw$lagseries(sp500index)
})
dsraw <- read.csv("goyal-welch-a.csv")  ## download the latest version
ds <- within(dsraw, {
spret <-  (sp500index+sp500d12)/iaw$lagseries(sp500index)-1
logeqp <-  log(1.0 + spret - tbill/100.0)
lagdp <- iaw$lagseries(sp500d12)/iaw$lagseries(sp500index)
})
help()
?exists
?pdf.start
iaw = new.env()
if (!exists("lagseries", iaw)) iaw$lagseries <- function(x) c(NA, x[1:(length(x)-1)])
if (!exists("residuals", iaw)) iaw$residuals <- stats:::residuals(lmobject,...)
if (!exists("hline", iaw)) iaw$hline <- function(yloc, xloc=c(-9e99,9e99), ...) { for (i in 1:length(yloc)) { lines(xloc, c(yloc[i], yloc[i]), ...) } }
if (!exists("pdf.start", iaw)) iaw$pdf.start <- pdf
if (!exists("p.arrows", iaw)) iaw$p.arrows <- arrows
View(iaw)
dsraw <- read.csv("goyal-welch-a.csv")  ## download the latest version
## to perfectly replicate GW, use ds <- subset(dsraw, dsraw$yyyy<=2005)
ds <- within(dsraw, {
spret <-  (sp500index+sp500d12)/iaw$lagseries(sp500index)-1
logeqp <-  log(1.0 + spret - tbill/100.0)
lagdp <- iaw$lagseries(sp500d12)/iaw$lagseries(sp500index)
})
ds <- subset(ds, ds$yyyy>=1872, select=c("yyyy", "logeqp", "lagdp"))
print(summary(ds))
## in-sample residuals are easy
is.xyresid <- iaw$residuals( lm( logeqp ~ lagdp, data=ds ) )
is.meanresid <- ds$logeqp - mean( ds$logeqp )
isreg <- summary( lm( logeqp ~ lagdp, data=ds ) )
print(isreg)
tstat <- round(coef(isreg)[2,3],2)
rsq <- round(isreg$adj.r.squared, 3)*100
lyr <- last(ds$yyyy,1)
is.xyresid <- iaw$residuals( lm( logeqp ~ lagdp, data=ds ) )
ds <- subset(ds, ds$yyyy>=1872, select=c("yyyy", "logeqp", "lagdp"))
print(summary(ds))
is.xyresid <- iaw$residuals( lm( logeqp ~ lagdp, data=ds ) )
if (!exists("residuals", iaw)) iaw$residuals <- stats:::residuals(lmobject,...)
update.packages()
n
n
ds
update.packages()
y
update.packages()
a
################################################################
## oct 2017
##
## omitting standard error bounds, this is a template to generate
## figures like those in Goyal-Welch, RFS, july 2008.
################################################################
cat("Trying to make it possible for others to run the same code.\n",
"otherwise, you may have to modify the code.  it should be easy.\n")
iaw <- new.env()
if (!exists("lagseries", iaw)) iaw$lagseries <- function(x) c(NA, x[1:(length(x)-1)])
if (!exists("residuals", iaw)) iaw$residuals <- stats:::residuals(lmobject,...)
if (!exists("hline", iaw)) iaw$hline <- function(yloc, xloc=c(-9e99,9e99), ...) { for (i in 1:length(yloc)) { lines(xloc, c(yloc[i], yloc[i]), ...) } }
if (!exists("pdf.start", iaw)) iaw$pdf.start <- pdf
if (!exists("p.arrows", iaw)) iaw$p.arrows <- arrows
dsraw <- read.csv("goyal-welch-a.csv")  ## download the latest version
ds <- within(dsraw, {
spret <-  (sp500index+sp500d12)/iaw$lagseries(sp500index)-1
logeqp <-  log(1.0 + spret - tbill/100.0)
lagdp <- iaw$lagseries(sp500d12)/iaw$lagseries(sp500index)
})
ds <- subset(ds, ds$yyyy>=1872, select=c("yyyy", "logeqp", "lagdp"))
print(summary(ds))
is.xyresid <- iaw$residuals( lm( logeqp ~ lagdp, data=ds ) )
